<templates>
    <template name="EntryPoint.cpp">
        <config id="EntryPoint.cpp" name="Entry Point Src" >

        </config>
        <content>
            <![CDATA[

#include <core/ext/PluginEnv.h>

#include <base/QzAppContext.h>

#include <plugin_base/PluginContext.h>

#include "Plugin.h"

void initResource() {
    Q_INIT_RESOURCE( $<PLUGIN_NAME>$ );
}

extern "C" {

Q_DECL_EXPORT PluginWrapper getPluginWrapper(
        PluginInputWrapper *input )
{
    initResource();
    auto plugin = std::unique_ptr<
        Quartz::Ext::$<PLUGIN_NAMESPACE>$::Plugin >{
            new Quartz::Ext::$<PLUGIN_NAMESPACE>$::Plugin{}
        };
    auto pluginPtr = plugin.get();
    Quartz::Plugin::PluginContext::init(
                std::move( plugin ),
                std::move( input->env ),
                dynamic_cast< Quartz::QzAppContext *>( input->appContext ));
    return PluginWrapper{ pluginPtr };
}

Q_DECL_EXPORT void destroy()
{
    Quartz::Plugin::PluginContext::destroy();
}

}
            ]]>
        </content>
    </template>
</templates>
